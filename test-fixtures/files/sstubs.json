[
    {
      "bugType": "CHANGE_OPERATOR",
      "fixCommitSHA1": "aa90e04b5e6eb7f6d46dde16867196329568324e",
      "fixCommitParentSHA1": "46d3a4007fe1418d53baabc16dec39275079684b",
      "bugFilePath": "modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java",
      "fixPatch": "diff --git a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\nindex a71cd4c..93a8693 100644\n--- a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n+++ b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n@@ -181,7 +181,7 @@\n       for (SubmittedForm otherForm : submittedForms) {\n         try {\n           JsonNode submittedNode \u003d formEngineConfiguration.getObjectMapper().readTree(otherForm.getFormValueBytes());\n-          if (submittedNode \u003d\u003d null || submittedNode.get(\"values\") !\u003d null) {\n+          if (submittedNode \u003d\u003d null || submittedNode.get(\"values\") \u003d\u003d null) {\n             continue;\n           }\n          \n@@ -221,7 +221,7 @@\n         try {\n           if (StringUtils.isNotEmpty(fieldValue)) {\n             LocalDate dateValue \u003d LocalDate.parse(fieldValue);\n-            variables.put(field.getId(), dateValue);\n+            variables.put(field.getId(), dateValue.toString(\"yyyy-M-d\"));\n           }\n         } catch (Exception e) {\n           logger.error(\"Error parsing form date value for process instance \" + processInstanceId + \" with value \" + fieldValue, e);\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 184,
      "bugNodeStartChar": 8444,
      "bugNodeLength": 35,
      "fixLineNum": 184,
      "fixNodeStartChar": 8444,
      "fixNodeLength": 35,
      "sourceBeforeFix": "submittedNode.get(\"values\") !\u003d null",
      "sourceAfterFix": "submittedNode.get(\"values\") \u003d\u003d null"
    },
    {
      "bugType": "OVERLOAD_METHOD_MORE_ARGS",
      "fixCommitSHA1": "46d3a4007fe1418d53baabc16dec39275079684b",
      "fixCommitParentSHA1": "4a51f2c95fc1ab5eb6c32c32d8d31dc078fea630",
      "bugFilePath": "modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java",
      "fixPatch": "diff --git a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\nindex 0531c3e..e515670b 100644\n--- a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n+++ b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n@@ -28,7 +28,7 @@\n     @Override\n     protected List\u003cProcessEngineConfigurator\u003e getConfigurators() {\n         ProcessEngineConfigurator configurator \u003d new SecureServiceTaskConfigurator()\n-                .setWhiteListedShellCommands(new HashSet\u003cString\u003e(Arrays.asList(\"ls\", \"pwd\")));\n+                .setWhiteListedShellCommands(new HashSet\u003cString\u003e(Arrays.asList(\"cmd\",\"ls\", \"pwd\")));\n \n         return Arrays.asList(configurator);\n     }\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 31,
      "bugNodeStartChar": 1214,
      "bugNodeLength": 26,
      "fixLineNum": 31,
      "fixNodeStartChar": 1214,
      "fixNodeLength": 32,
      "sourceBeforeFix": "Arrays.asList(\"ls\",\"pwd\")",
      "sourceAfterFix": "Arrays.asList(\"cmd\",\"ls\",\"pwd\")"
    },
    {
      "bugType": "OVERLOAD_METHOD_MORE_ARGS",
      "fixCommitSHA1": "e15dbdf6aceac531383d22369d7f09b40106f06e",
      "fixCommitParentSHA1": "27471f6535a7c91cf5387a88b1a920d4d991c2e5",
      "bugFilePath": "modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java",
      "fixPatch": "diff --git a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\nindex 0531c3e..e515670b 100644\n--- a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n+++ b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n@@ -28,7 +28,7 @@\n     @Override\n     protected List\u003cProcessEngineConfigurator\u003e getConfigurators() {\n         ProcessEngineConfigurator configurator \u003d new SecureServiceTaskConfigurator()\n-                .setWhiteListedShellCommands(new HashSet\u003cString\u003e(Arrays.asList(\"ls\", \"pwd\")));\n+                .setWhiteListedShellCommands(new HashSet\u003cString\u003e(Arrays.asList(\"cmd\",\"ls\", \"pwd\")));\n \n         return Arrays.asList(configurator);\n     }\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 31,
      "bugNodeStartChar": 1214,
      "bugNodeLength": 26,
      "fixLineNum": 31,
      "fixNodeStartChar": 1214,
      "fixNodeLength": 32,
      "sourceBeforeFix": "Arrays.asList(\"ls\",\"pwd\")",
      "sourceAfterFix": "Arrays.asList(\"cmd\",\"ls\",\"pwd\")"
    },
    {
      "bugType": "DIFFERENT_METHOD_SAME_ARGS",
      "fixCommitSHA1": "114870164ba9822afc3a92eefe5258f54a1c6a17",
      "fixCommitParentSHA1": "845ab7d135ab688e4943bd0f5472f0a5401528f8",
      "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\nindex 4de3611..f71b5a3 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n@@ -26,7 +26,7 @@\n             assertEquals(1, taskService.createTaskQuery()\n                     .or()\n                     .taskInvolvedUser(\"involvedUser\")\n-                    .taskInvolvedGroups(groups)\n+                    .taskInvolvedGroupsIn(groups)\n                     .endOr()\n                     .count());\n \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 26,
      "bugNodeStartChar": 797,
      "bugNodeLength": 157,
      "fixLineNum": 26,
      "fixNodeStartChar": 797,
      "fixNodeLength": 159,
      "sourceBeforeFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroups(groups)",
      "sourceAfterFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroupsIn(groups)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "114870164ba9822afc3a92eefe5258f54a1c6a17",
      "fixCommitParentSHA1": "845ab7d135ab688e4943bd0f5472f0a5401528f8",
      "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\nindex 4de3611..f71b5a3 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n@@ -26,7 +26,7 @@\n             assertEquals(1, taskService.createTaskQuery()\n                     .or()\n                     .taskInvolvedUser(\"involvedUser\")\n-                    .taskInvolvedGroups(groups)\n+                    .taskInvolvedGroupsIn(groups)\n                     .endOr()\n                     .count());\n \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 26,
      "bugNodeStartChar": 797,
      "bugNodeLength": 157,
      "fixLineNum": 26,
      "fixNodeStartChar": 797,
      "fixNodeLength": 159,
      "sourceBeforeFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroups(groups)",
      "sourceAfterFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroupsIn(groups)"
    },
    {
      "bugType": "CHANGE_NUMERAL",
      "fixCommitSHA1": "8999fbf3f64ca631485431592c8f4f8290f59db1",
      "fixCommitParentSHA1": "977f738759f4c60d17ddc4af045ad77091f6ff78",
      "bugFilePath": "modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java",
      "fixPatch": "diff --git a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\nindex ec34354..951cf7a 100755\n--- a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n+++ b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n@@ -53,7 +53,7 @@\n     ProcessInstance processInstance \u003d runtimeService.startProcessInstanceByKey(\"asyncCamelProcessRevisited\");\n     List\u003cExecution\u003e executionList \u003d runtimeService.createExecutionQuery().list();\n     assertEquals(3, executionList.size());\n-    waitForJobExecutorToProcessAllJobs(3000, 500);\n+    waitForJobExecutorToProcessAllJobs(5000, 500);\n     assertEquals(0, runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());\n   }\n }\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 56,
      "bugNodeStartChar": 2285,
      "bugNodeLength": 45,
      "fixLineNum": 56,
      "fixNodeStartChar": 2285,
      "fixNodeLength": 45,
      "sourceBeforeFix": "waitForJobExecutorToProcessAllJobs(3000,500)",
      "sourceAfterFix": "waitForJobExecutorToProcessAllJobs(5000,500)"
    },
    {
      "bugType": "CHANGE_NUMERAL",
      "fixCommitSHA1": "4fd2358fcf0cf248806b7f7a05c555d0f99b6cd7",
      "fixCommitParentSHA1": "2888ffa952177f80de66a3ddc02a2208f9e27e22",
      "bugFilePath": "modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java",
      "fixPatch": "diff --git a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\nindex ec34354..951cf7a 100755\n--- a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n+++ b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n@@ -53,7 +53,7 @@\n     ProcessInstance processInstance \u003d runtimeService.startProcessInstanceByKey(\"asyncCamelProcessRevisited\");\n     List\u003cExecution\u003e executionList \u003d runtimeService.createExecutionQuery().list();\n     assertEquals(3, executionList.size());\n-    waitForJobExecutorToProcessAllJobs(3000, 500);\n+    waitForJobExecutorToProcessAllJobs(5000, 500);\n     assertEquals(0, runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());\n   }\n }\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 56,
      "bugNodeStartChar": 2285,
      "bugNodeLength": 45,
      "fixLineNum": 56,
      "fixNodeStartChar": 2285,
      "fixNodeLength": 45,
      "sourceBeforeFix": "waitForJobExecutorToProcessAllJobs(3000,500)",
      "sourceAfterFix": "waitForJobExecutorToProcessAllJobs(5000,500)"
    },
    {
      "bugType": "OVERLOAD_METHOD_MORE_ARGS",
      "fixCommitSHA1": "c63848c72d1476607e6aecf717f65532f86e8d86",
      "fixCommitParentSHA1": "d3ca988b6c797434986bba2c28274bbfca983681",
      "bugFilePath": "modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java",
      "fixPatch": "diff --git a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\nindex 94817b5..a71cd4c 100644\n--- a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n+++ b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n@@ -108,7 +108,7 @@\n           try {\n             field.setValue(formExpression.getValue(variables));\n           } catch (Exception e) {\n-            logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \" + e.getMessage());\n+            logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \" + e.getMessage(), e);\n           }\n           \n         } else {\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 111,
      "bugNodeStartChar": 4835,
      "bugNodeLength": 108,
      "fixLineNum": 111,
      "fixNodeStartChar": 4835,
      "fixNodeLength": 111,
      "sourceBeforeFix": "logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \"+ e.getMessage())",
      "sourceAfterFix": "logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \"+ e.getMessage(),e)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "e47f552b58a809e41c6c5ebddf1fd5bbfe4136fd",
      "fixCommitParentSHA1": "c244edd41547d1105e0e9ecdefbaa0e17467d405",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\nindex 291fb1a..f3039a2 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\n@@ -222,7 +222,7 @@\n     }\n     \n     if (transientVariabes !\u003d null) {\n-      variables.putAll(variables);\n+      variables.putAll(transientVariabes);\n     }\n \n     return variables;\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 225,
      "bugNodeStartChar": 8613,
      "bugNodeLength": 27,
      "fixLineNum": 225,
      "fixNodeStartChar": 8613,
      "fixNodeLength": 35,
      "sourceBeforeFix": "variables.putAll(variables)",
      "sourceAfterFix": "variables.putAll(transientVariabes)"
    },
    {
      "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
      "fixCommitSHA1": "9b649ac6da4293d736676de895a67aaf87fc5979",
      "fixCommitParentSHA1": "7161a504bbbdb06c5141b0fcee643b19eda7860e",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\nindex 6335125..7604803 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n@@ -1209,7 +1209,7 @@\n \n       // Special care for MSSQL, as it has a hard limit of 2000 params per statement (incl bulk statement).\n       // Especially with executions, with 100 as default, this limit is passed.\n-      if (DATABASE_TYPE_MYSQL.equals(databaseType)) {\n+      if (DATABASE_TYPE_MSSQL.equals(databaseType)) {\n         maxNrOfStatementsInBulkInsert \u003d DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER;\n       }\n       \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 1212,
      "bugNodeStartChar": 58872,
      "bugNodeLength": 40,
      "fixLineNum": 1212,
      "fixNodeStartChar": 58872,
      "fixNodeLength": 40,
      "sourceBeforeFix": "DATABASE_TYPE_MYSQL.equals(databaseType)",
      "sourceAfterFix": "DATABASE_TYPE_MSSQL.equals(databaseType)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "9b649ac6da4293d736676de895a67aaf87fc5979",
      "fixCommitParentSHA1": "7161a504bbbdb06c5141b0fcee643b19eda7860e",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\nindex 6335125..7604803 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n@@ -1209,7 +1209,7 @@\n \n       // Special care for MSSQL, as it has a hard limit of 2000 params per statement (incl bulk statement).\n       // Especially with executions, with 100 as default, this limit is passed.\n-      if (DATABASE_TYPE_MYSQL.equals(databaseType)) {\n+      if (DATABASE_TYPE_MSSQL.equals(databaseType)) {\n         maxNrOfStatementsInBulkInsert \u003d DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER;\n       }\n       \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 1212,
      "bugNodeStartChar": 58872,
      "bugNodeLength": 40,
      "fixLineNum": 1212,
      "fixNodeStartChar": 58872,
      "fixNodeLength": 40,
      "sourceBeforeFix": "DATABASE_TYPE_MYSQL.equals(databaseType)",
      "sourceAfterFix": "DATABASE_TYPE_MSSQL.equals(databaseType)"
    },
    {
      "bugType": "CHANGE_NUMERAL",
      "fixCommitSHA1": "c9c1e334bc0844438ce6930669908a7a5fd8950e",
      "fixCommitParentSHA1": "a78b348c4a9a6197d6c69eee975a68d9779fa972",
      "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java",
      "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java b/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\nindex 0bdc934..209cccb 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\n@@ -32,7 +32,7 @@\n     \n     String tablePrefix \u003d processEngineConfiguration.getDatabaseTablePrefix();\n     \n-    assertEquals(new Long(3), tableCount.get(tablePrefix+\"ACT_GE_PROPERTY\"));\n+    assertEquals(new Long(4), tableCount.get(tablePrefix+\"ACT_GE_PROPERTY\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_GE_BYTEARRAY\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_RE_DEPLOYMENT\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_RU_EXECUTION\"));\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 35,
      "bugNodeStartChar": 1225,
      "bugNodeLength": 11,
      "fixLineNum": 35,
      "fixNodeStartChar": 1225,
      "fixNodeLength": 11,
      "sourceBeforeFix": "new Long(3)",
      "sourceAfterFix": "new Long(4)"
    },
    {
      "bugType": "DIFFERENT_METHOD_SAME_ARGS",
      "fixCommitSHA1": "1f8fb8ad37dbd4cb4be77d827ba19e857bd451d1",
      "fixCommitParentSHA1": "3755e5734f04e17dc88ec98aa6c12e28bc9d02c0",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex f9450b7..e4b578a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -168,7 +168,7 @@\n               // reduce log level, as normally we\u0027re not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 171,
      "bugNodeStartChar": 7738,
      "bugNodeLength": 59,
      "fixLineNum": 171,
      "fixNodeStartChar": 7738,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "1f8fb8ad37dbd4cb4be77d827ba19e857bd451d1",
      "fixCommitParentSHA1": "3755e5734f04e17dc88ec98aa6c12e28bc9d02c0",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex f9450b7..e4b578a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -168,7 +168,7 @@\n               // reduce log level, as normally we\u0027re not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 171,
      "bugNodeStartChar": 7738,
      "bugNodeLength": 59,
      "fixLineNum": 171,
      "fixNodeStartChar": 7738,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "DIFFERENT_METHOD_SAME_ARGS",
      "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
      "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex d11308b..7c84dd9 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -153,7 +153,7 @@\n       // reduce log level, as normally we\u0027re not interested in logging this exception\n       log.debug(\"Optimistic locking exception : \" + exception);\n     } else {\n-      log.debug(\"Error while closing command context\", exception);\n+      log.error(\"Error while closing command context\", exception);\n     }\n   }\n \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 156,
      "bugNodeStartChar": 7326,
      "bugNodeLength": 59,
      "fixLineNum": 156,
      "fixNodeStartChar": 7326,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
      "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex d11308b..7c84dd9 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -153,7 +153,7 @@\n       // reduce log level, as normally we\u0027re not interested in logging this exception\n       log.debug(\"Optimistic locking exception : \" + exception);\n     } else {\n-      log.debug(\"Error while closing command context\", exception);\n+      log.error(\"Error while closing command context\", exception);\n     }\n   }\n \n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 156,
      "bugNodeStartChar": 7326,
      "bugNodeLength": 59,
      "fixLineNum": 156,
      "fixNodeStartChar": 7326,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "DIFFERENT_METHOD_SAME_ARGS",
      "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
      "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
      "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\nindex d5cf7ae..b90a554 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n@@ -171,7 +171,7 @@\n               // reduce log level, as normally we\u0027re not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 174,
      "bugNodeStartChar": 8013,
      "bugNodeLength": 59,
      "fixLineNum": 174,
      "fixNodeStartChar": 8013,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "CHANGE_IDENTIFIER",
      "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
      "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
      "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java",
      "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\nindex d5cf7ae..b90a554 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n@@ -171,7 +171,7 @@\n               // reduce log level, as normally we\u0027re not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 174,
      "bugNodeStartChar": 8013,
      "bugNodeLength": 59,
      "fixLineNum": 174,
      "fixNodeStartChar": 8013,
      "fixNodeLength": 59,
      "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
      "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
      "bugType": "MORE_SPECIFIC_IF",
      "fixCommitSHA1": "0ebbee083af8f9047503b0ad50cf56f1a95504e3",
      "fixCommitParentSHA1": "64743e3c38d45be1d01cbc931440037eefdccc33",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 3a42a25..e980fe5 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -70,14 +70,14 @@\n \n   public Session openSession(CommandContext commandContext) {\n     DbSqlSession dbSqlSession \u003d new DbSqlSession(this, commandContext.getEntityCache());\n-    if (getDatabaseSchema() !\u003d null) {\n+    if (getDatabaseSchema() !\u003d null \u0026\u0026 getDatabaseSchema().length() \u003e 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setSchema(getDatabaseSchema());\n       } catch (SQLException e) {\n         throw new ActivitiException(\"Could not set database schema on connection\", e);\n       }\n     }\n-    if (getDatabaseCatalog() !\u003d null) {\n+    if (getDatabaseCatalog() !\u003d null \u0026\u0026 getDatabaseCatalog().length() \u003e 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setCatalog(getDatabaseCatalog());\n       } catch (SQLException e) {\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 73,
      "bugNodeStartChar": 3126,
      "bugNodeLength": 27,
      "fixLineNum": 73,
      "fixNodeStartChar": 3126,
      "fixNodeLength": 63,
      "sourceBeforeFix": "getDatabaseSchema() !\u003d null",
      "sourceAfterFix": "getDatabaseSchema() !\u003d null \u0026\u0026 getDatabaseSchema().length() \u003e 0"
    },
    {
      "bugType": "MORE_SPECIFIC_IF",
      "fixCommitSHA1": "0ebbee083af8f9047503b0ad50cf56f1a95504e3",
      "fixCommitParentSHA1": "64743e3c38d45be1d01cbc931440037eefdccc33",
      "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
      "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 3a42a25..e980fe5 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -70,14 +70,14 @@\n \n   public Session openSession(CommandContext commandContext) {\n     DbSqlSession dbSqlSession \u003d new DbSqlSession(this, commandContext.getEntityCache());\n-    if (getDatabaseSchema() !\u003d null) {\n+    if (getDatabaseSchema() !\u003d null \u0026\u0026 getDatabaseSchema().length() \u003e 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setSchema(getDatabaseSchema());\n       } catch (SQLException e) {\n         throw new ActivitiException(\"Could not set database schema on connection\", e);\n       }\n     }\n-    if (getDatabaseCatalog() !\u003d null) {\n+    if (getDatabaseCatalog() !\u003d null \u0026\u0026 getDatabaseCatalog().length() \u003e 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setCatalog(getDatabaseCatalog());\n       } catch (SQLException e) {\n",
      "projectName": "Activiti.Activiti",
      "bugLineNum": 80,
      "bugNodeStartChar": 3396,
      "bugNodeLength": 28,
      "fixLineNum": 80,
      "fixNodeStartChar": 3396,
      "fixNodeLength": 65,
      "sourceBeforeFix": "getDatabaseCatalog() !\u003d null",
      "sourceAfterFix": "getDatabaseCatalog() !\u003d null \u0026\u0026 getDatabaseCatalog().length() \u003e 0"
    }
]